---
import { getAllUsedTags } from '../lib/articles';
import { Tags } from '../schemas/ArticleSchema';

const defaultTagColor =
    'bg-blue-500 hover:bg-blue-400 border-blue-700 hover:border-blue-500 dark:bg-blue-500 dark:hover:bg-blue-400 dark:border-blue-700 dark:hover:border-blue-500';
const activeColor =
    'text-black bg-gray-200 hover:bg-gray-300 border-gray-400 hover:border-gray-500 dark:bg-gray-200 dark:hover:bg-gray-300 dark:border-gray-400 dark:hover:border-gray-500';

const tagsWithColors: Record<Tags | 'All', string> = {
    ['All']:
        'bg-slate-500 hover:bg-slate-400 border-slate-700 hover:border-slate-500 dark:bg-slate-500 dark:hover:bg-slate-400 dark:border-slate-700 dark:hover:border-slate-500',
    [Tags.PlatformEngineering]:
        'bg-purple-500 hover:bg-purple-400 border-purple-700 hover:border-purple-500 dark:bg-purple-500 dark:hover:bg-purple-400 dark:border-purple-700 dark:hover:border-purple-500',
    [Tags.Frontend]:
        'bg-pink-500 hover:bg-pink-400 border-pink-700 hover:border-pink-500 dark:bg-pink-500 dark:hover:bg-pink-400 dark:border-pink-700 dark:hover:border-pink-500',
    [Tags.SRE]:
        'bg-indigo-500 hover:bg-indigo-400 border-indigo-700 hover:border-indigo-500 dark:bg-indigo-500 dark:hover:bg-indigo-400 dark:border-indigo-700 dark:hover:border-indigo-500',
    [Tags.Gaming]:
        'bg-lime-500 hover:bg-lime-400 border-lime-700 hover:border-lime-500 dark:bg-lime-500 dark:hover:bg-lime-400 dark:border-lime-700 dark:hover:border-lime-500'
};

const usedTags = await getAllUsedTags();
const { currentTag } = Astro.props;

const tags = usedTags.map((tagInfo) => {
    const color =
        tagInfo.tag === currentTag
            ? activeColor
            : tagsWithColors[tagInfo.tag] || defaultTagColor;

    return {
        ...tagInfo,
        tagTitle: `View articles with the tag: ${tagInfo.tag}`,
        color: color
    };
});

const allTags = {
    tag: 'All' as Tags,
    tagLink: '/articles',
    tagTitle: 'View all articles',
    color: currentTag === 'all' ? activeColor : tagsWithColors['All']
};

tags.unshift(allTags);
---

<div class="-ml-2 flex flex-wrap">
    {
        tags.map(({ tag, tagLink, tagTitle, color }) => (
            <div class="px-2 py-2">
                <a href={tagLink} title={tagTitle} data-astro-prefetch>
                    <button
                        class={`${color} rounded border-b-4 px-4 py-2 font-bold text-white`}
                    >
                        {tag}
                    </button>
                </a>
            </div>
        ))
    }
</div>
